'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var core = require('@emotion/core');
var React = require('react');
var React__default = _interopDefault(React);
require('../fonts/fonts.js');
var base$1 = require('../base-91f9e1df.js');
require('../mono-a0d4bd30.js');
var colors = require('../colors/colors.js');
var index = require('../index-8a508515.js');

/**
 * Component to render Feature Intro content.
 *
 * If this component is rendered in the children of `FeatureIntroControl`, then
 * `FeatureIntroControl` will render this element in it's layout. Otherwise, it's
 * rendered as-is.
 */

var FeatureIntroContent = function (_a) {
  var children = _a.children,
      className = _a.className,
      style = _a.style;
  var featureIntroContext = index.useFeatureIntroControlInternalContext();
  var _b = [featureIntroContext === null || featureIntroContext === void 0 ? void 0 : featureIntroContext.id, featureIntroContext === null || featureIntroContext === void 0 ? void 0 : featureIntroContext.setContent],
      featureIntroId = _b[0],
      setContent = _b[1];
  var element = React.useMemo(function () {
    return core.jsx("div", {
      className: className,
      css: _tslib.__assign(_tslib.__assign({}, base$1.small), {
        color: colors.colors.grey.base,
        fontWeight: "normal",
        lineHeight: "16px",
        paddingBottom: 16
      }),
      id: featureIntroId && featureIntroId + "-content",
      style: style
    }, children);
  }, [children, className, featureIntroId, style]);
  React.useLayoutEffect(function () {
    setContent === null || setContent === void 0 ? void 0 : setContent(element);
  }, [element, setContent]);
  return featureIntroContext ? null : element;
};

exports.FeatureIntroContent = FeatureIntroContent;
//# sourceMappingURL=index.js.map
