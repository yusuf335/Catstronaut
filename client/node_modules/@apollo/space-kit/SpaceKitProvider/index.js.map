{"version":3,"file":"index.js","sources":["../src/SpaceKitProvider/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\n\ninterface State {\n  /**\n   * Disable all JavaScript based animations\n   *\n   * This includes Framer Motion animations and manual css values.\n   *\n   * @default false\n   */\n  disableAnimations: boolean;\n\n  singletonComponents: Record<\n    string,\n    {\n      element: ReturnType<React.FC>;\n      instanceCount: React.MutableRefObject<number>;\n    }\n  >;\n\n  theme: \"light\" | \"dark\";\n}\n\nconst defaultState: State = {\n  disableAnimations: false,\n  singletonComponents: {},\n  theme: \"light\",\n};\n\n// This implementation is based on the excellent blog post by Kent C. Dodds on\n// How to use React Context effectively:\n// https://kentcdodds.com/blog/how-to-use-react-context-effectively\n\nconst SpaceKitStateContext = React.createContext<State | undefined>(undefined);\nconst SpaceKitSetContext = React.createContext<\n  React.Dispatch<React.SetStateAction<State>> | undefined\n>(undefined);\n\n/**\n * Provider to set options on all Space Kit components\n *\n * This is completely optional; components will not have issues if this is\n * missing from the context.\n *\n * A good place to use this would be in your storybook configuration as a\n * decorator applied to all components if we're running inside of chromatic.\n */\nexport const SpaceKitProvider: React.FC<Partial<\n  Pick<State, \"theme\" | \"disableAnimations\">\n>> = ({ children, theme, disableAnimations }) => {\n  const nextState = useMemo(\n    () => ({\n      theme: theme ?? defaultState.theme,\n      disableAnimations: disableAnimations ?? defaultState.disableAnimations,\n      singletonComponents: {},\n    }),\n    [theme, disableAnimations],\n  );\n  const [state, setState] = React.useState<State>(nextState);\n\n  useEffect(() => {\n    setState((currState) => ({\n      ...nextState,\n      singletonComponents: currState.singletonComponents,\n    }));\n  }, [nextState]);\n\n  return (\n    <SpaceKitStateContext.Provider value={state}>\n      <SpaceKitSetContext.Provider value={setState}>\n        {Object.entries(state?.singletonComponents ?? {}).map(\n          ([identity, { element }]) => {\n            return <React.Fragment key={identity}>{element}</React.Fragment>;\n          },\n        )}\n        {children}\n      </SpaceKitSetContext.Provider>\n    </SpaceKitStateContext.Provider>\n  );\n};\n\n/**\n * Hook to indicate if the current component is being rendered inside of a\n * `SpaceKitProvider`\n */\nexport function useHasSpaceKitProvider(): boolean {\n  return !!React.useContext(SpaceKitStateContext);\n}\n\n/**\n * Hook to get the values from the Space Kit Provider with sensible defaults for\n * all the values.\n *\n * This component does _not_ require us to be wrapped with `SpaceKitProvider`\n */\nexport function useSpaceKitProvider(): Readonly<State> {\n  const context = React.useContext(SpaceKitStateContext);\n\n  if (context == null) {\n    // Provide a default because consumers are not required to wrap their\n    // components with our providers\n    return defaultState;\n  }\n\n  return context;\n}\n\n/**\n * Hook intended to be used internally to communicate with `SpaceKitProvider`\n * indicating singleton components being mounted and unmounted.\n *\n * Use `show` to track when you show a component.\n *\n * Use `hide` to track when you remove a component.\n */\nexport function useSingletonComponent(): {\n  hide: ({ identity }: { identity: string }) => void;\n  show: ({\n    identity,\n    element,\n  }: {\n    identity: string;\n    element: ReturnType<React.FC>;\n  }) => void;\n} {\n  const setSpaceKitContext = React.useContext(SpaceKitSetContext);\n\n  const hide = React.useCallback(\n    ({ identity }: { identity: string }) => {\n      setSpaceKitContext?.((state = defaultState) => {\n        if (!state.singletonComponents[identity]) {\n          // This should never happen; we should never be trying to decrement\n          // something that isn't rendered.\n          return state;\n        }\n\n        if (state.singletonComponents[identity].instanceCount.current === 1) {\n          // This is the last instance; delete it from the component and return\n          // a new state to trigger a re-render.\n          const singletonComponentsCopy = { ...state.singletonComponents };\n          delete singletonComponentsCopy[identity];\n\n          return {\n            ...state,\n            singletonComponents: singletonComponentsCopy,\n          };\n        }\n\n        // Decrement the instance count and return the original `state` so this\n        // won't trigger a re-render.\n        state.singletonComponents[identity].instanceCount.current -= 1;\n        return state;\n      });\n    },\n    [setSpaceKitContext],\n  );\n\n  const show = React.useCallback(\n    ({\n      identity,\n      element,\n    }: {\n      identity: string;\n      element: ReturnType<React.FC>;\n    }) => {\n      setSpaceKitContext?.((previousState = defaultState) => {\n        if (!previousState.singletonComponents[identity]) {\n          // This is the first time ths identity is being rendered. Create the\n          // entry in `singletonComponents` and modify `state` to trigger a\n          // re-render.\n          return {\n            ...previousState,\n            singletonComponents: {\n              ...previousState.singletonComponents,\n              [identity]: { element, instanceCount: { current: 1 } },\n            },\n          };\n        }\n\n        // This identity exists. Increment the instanceCount and return the\n        // original state to avoid a re-render.\n        previousState.singletonComponents[identity].instanceCount.current += 1;\n        return previousState;\n      });\n    },\n    [setSpaceKitContext],\n  );\n\n  return { hide, show };\n}\n"],"names":["defaultState","disableAnimations","singletonComponents","theme","SpaceKitStateContext","React","createContext","undefined","SpaceKitSetContext","SpaceKitProvider","_a","children","nextState","useMemo","_c","useState","state","setState","useEffect","currState","Provider","value","Object","entries","map","identity","element","Fragment","key","useHasSpaceKitProvider","useContext","useSpaceKitProvider","context","useSingletonComponent","setSpaceKitContext","hide","useCallback","instanceCount","current","singletonComponentsCopy","show","previousState"],"mappings":"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"}