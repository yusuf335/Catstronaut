import React from "react";
interface State {
    /**
     * Disable all JavaScript based animations
     *
     * This includes Framer Motion animations and manual css values.
     *
     * @default false
     */
    disableAnimations: boolean;
    singletonComponents: Record<string, {
        element: ReturnType<React.FC>;
        instanceCount: React.MutableRefObject<number>;
    }>;
    theme: "light" | "dark";
}
/**
 * Provider to set options on all Space Kit components
 *
 * This is completely optional; components will not have issues if this is
 * missing from the context.
 *
 * A good place to use this would be in your storybook configuration as a
 * decorator applied to all components if we're running inside of chromatic.
 */
export declare const SpaceKitProvider: React.FC<Partial<Pick<State, "theme" | "disableAnimations">>>;
/**
 * Hook to indicate if the current component is being rendered inside of a
 * `SpaceKitProvider`
 */
export declare function useHasSpaceKitProvider(): boolean;
/**
 * Hook to get the values from the Space Kit Provider with sensible defaults for
 * all the values.
 *
 * This component does _not_ require us to be wrapped with `SpaceKitProvider`
 */
export declare function useSpaceKitProvider(): Readonly<State>;
/**
 * Hook intended to be used internally to communicate with `SpaceKitProvider`
 * indicating singleton components being mounted and unmounted.
 *
 * Use `show` to track when you show a component.
 *
 * Use `hide` to track when you remove a component.
 */
export declare function useSingletonComponent(): {
    hide: ({ identity }: {
        identity: string;
    }) => void;
    show: ({ identity, element, }: {
        identity: string;
        element: ReturnType<React.FC>;
    }) => void;
};
export {};
