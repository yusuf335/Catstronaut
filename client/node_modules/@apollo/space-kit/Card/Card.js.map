{"version":3,"file":"Card.js","sources":["../src/Card/Card.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { colors } from \"../colors\";\nimport { base } from \"../typography\";\nimport { jsx, ClassNames } from \"@emotion/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\n\nconst descriptionMaxWidth = 760;\n\ninterface CardProps\n  extends React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    CardSectionProps {\n  /**\n   * The content of the card,\n   * appears below the title and description\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Override how the `header` is rendered. You can pass either an intrinisic\n   * jsx element as a string (like \"h1\") or a react element (`<h1 />`)\n   *\n   * If you pass a react element, props that we add are spread onto the input.\n   *\n   * @default \"h2\"\n   */\n  headingAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  /**\n   * large has bigger heading & smaller padding than standard\n   */\n  size?: \"standard\" | \"large\";\n\n  /**\n   * color theme for alert\n   * @default \"light\"\n   */\n  theme?: \"light\" | \"dark\";\n}\n\nexport const Card: React.FC<CardProps> = ({\n  children,\n  heading,\n  actions,\n  description,\n  headingAs = \"h2\",\n  size,\n  theme: propTheme,\n  ...otherProps\n}) => {\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propTheme || providerTheme;\n\n  return (\n    <section\n      {...otherProps}\n      css={{\n        backgroundColor:\n          theme === \"light\"\n            ? colors.white\n            : theme === \"dark\"\n            ? colors.midnight.darker\n            : assertUnreachable(theme),\n        color:\n          theme === \"light\"\n            ? colors.black.base\n            : theme === \"dark\"\n            ? colors.white\n            : assertUnreachable(theme),\n        boxShadow: `0 1px 3px 0 rgba(0,0,0,.06)`,\n        borderStyle: \"solid\",\n        borderRadius: 8,\n        borderWidth: 1,\n        borderColor:\n          theme === \"light\"\n            ? colors.silver.dark\n            : theme === \"dark\"\n            ? colors.midnight.dark\n            : assertUnreachable(theme),\n        paddingLeft: 24,\n        paddingRight: 24,\n        paddingTop: size === \"large\" ? 16 : 28,\n        paddingBottom: size === \"large\" ? 16 : 28,\n      }}\n    >\n      <div\n        css={{\n          display: \"flex\",\n          marginBottom:\n            (heading || description) &&\n            React.Children.toArray(children).some(Boolean)\n              ? 24\n              : 0,\n        }}\n      >\n        <div\n          css={{\n            flex: \"1 1 0%\",\n            marginRight: \"auto\",\n            overflow: \"hidden\",\n          }}\n        >\n          <div>\n            {heading && (\n              <ClassNames>\n                {({ css, cx }) => {\n                  const headingProps = {\n                    className: cx(\n                      css({\n                        color:\n                          theme === \"light\"\n                            ? colors.black.base\n                            : theme === \"dark\"\n                            ? colors.white\n                            : assertUnreachable(theme),\n                        display: \"flex\",\n                        fontWeight: 600,\n                        marginBottom: 0,\n                        marginTop: 0,\n                        ...(size === \"large\" ? base.xlarge : base.large),\n                      }),\n                    ),\n                    children: heading,\n                  };\n\n                  return React.isValidElement(headingAs)\n                    ? React.cloneElement(headingAs, {\n                        ...headingProps,\n                        className: classnames(\n                          headingProps.className,\n                          headingAs.props.className,\n                        ),\n                      })\n                    : React.createElement(headingAs, headingProps);\n                }}\n              </ClassNames>\n            )}\n            {description && (\n              <div\n                css={{\n                  ...base.base,\n                  color:\n                    theme === \"light\"\n                      ? colors.grey.base\n                      : theme === \"dark\"\n                      ? colors.midnight.lighter\n                      : assertUnreachable(theme),\n                  maxWidth: actions ? descriptionMaxWidth : \"\",\n                }}\n              >\n                {description}\n              </div>\n            )}\n          </div>\n        </div>\n        {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n      </div>\n      {children}\n    </section>\n  );\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n  size: PropTypes.oneOf<CardProps[\"size\"]>([\"standard\", \"large\"]),\n};\n\ninterface CardSectionProps {\n  heading?: React.ReactNode;\n\n  /**\n   * the description for this card\n   * appears in grey below the title\n   */\n  description?: React.ReactNode;\n\n  /**\n   * actions could be a button\n   * or a tooltip or anything the card should display\n   * aligned with the title on the right\n   */\n  actions?: React.ReactNode;\n\n  /**\n   * color theme for alert\n   * @default \"light\"\n   */\n  theme?: \"light\" | \"dark\";\n}\n\nexport const CardSection: React.FC<CardSectionProps> = ({\n  heading,\n  description,\n  actions,\n  theme: propTheme,\n}) => {\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propTheme || providerTheme;\n\n  return (\n    <section\n      css={{\n        display: \"flex\",\n        marginTop: 24,\n      }}\n    >\n      <div css={{ flex: \"1 1 0%\", marginRight: \"auto\" }}>\n        <div>\n          {heading && (\n            <div\n              css={{\n                display: \"flex\",\n                color:\n                  theme === \"light\"\n                    ? colors.black.base\n                    : theme === \"dark\"\n                    ? colors.white\n                    : assertUnreachable(theme),\n                ...base.base,\n              }}\n            >\n              <span\n                css={{\n                  fontWeight: 600,\n                  flex: \"1 1 0%\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                  paddingRight: 24,\n                }}\n              >\n                {heading}\n              </span>\n            </div>\n          )}\n          {description && (\n            <div\n              css={{\n                ...base.base,\n                color:\n                  theme === \"light\"\n                    ? colors.grey.base\n                    : theme === \"dark\"\n                    ? colors.midnight.lighter\n                    : assertUnreachable(theme),\n                maxWidth: actions ? descriptionMaxWidth : \"\",\n              }}\n            >\n              {description}\n            </div>\n          )}\n        </div>\n      </div>\n      {actions && <div css={{ marginLeft: 16 }}>{actions}</div>}\n    </section>\n  );\n};\n\nCardSection.propTypes = {\n  heading: PropTypes.node,\n  description: PropTypes.node,\n  actions: PropTypes.node,\n};\n\n/**\n * A border line that can go between two card sections, with appropriate margin applied\n */\nexport const CardSeperator: React.FC<{\n  /**\n   * color theme for alert\n   * @default \"light\"\n   */\n  theme?: \"light\" | \"dark\";\n}> = ({ theme: propTheme }) => {\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propTheme || providerTheme;\n\n  return (\n    <hr\n      css={{\n        height: 1,\n        borderWidth: 0,\n        backgroundColor:\n          theme === \"light\"\n            ? colors.silver.dark\n            : theme === \"dark\"\n            ? colors.midnight.dark\n            : assertUnreachable(theme),\n\n        marginTop: 24,\n        marginBottom: 24,\n      }}\n    />\n  );\n};\n"],"names":["descriptionMaxWidth","Card","_a","children","heading","actions","description","_b","headingAs","size","propTheme","otherProps","providerTheme","useSpaceKitProvider","theme","jsx","css","backgroundColor","colors","white","midnight","darker","assertUnreachable","color","black","base","boxShadow","borderStyle","borderRadius","borderWidth","borderColor","silver","dark","paddingLeft","paddingRight","paddingTop","paddingBottom","display","marginBottom","React","Children","toArray","some","Boolean","flex","marginRight","overflow","ClassNames","cx","headingProps","className","fontWeight","marginTop","isValidElement","cloneElement","classnames","props","createElement","grey","lighter","maxWidth","marginLeft","propTypes","PropTypes","node","oneOf","CardSection","textOverflow","whiteSpace","CardSeperator","height"],"mappings":"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"}