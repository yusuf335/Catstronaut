{"version":3,"file":"AlertCard.js","sources":["../src/AlertCard/AlertCard.tsx"],"sourcesContent":["/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport { jsx, ClassNames } from \"@emotion/core\";\nimport React, { CSSProperties, Fragment, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nimport { base } from \"../typography\";\nimport { IconClose } from \"../icons/IconClose\";\nimport { colors } from \"../colors\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\nimport { IconInfoSolid } from \"../icons/IconInfoSolid\";\nimport { IconWarningSolid } from \"../icons/IconWarningSolid\";\nimport { IconErrorSolid } from \"../icons/IconErrorSolid\";\nimport { IconSuccessSolid } from \"../icons/IconSuccessSolid\";\nimport { Button } from \"../Button\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\n\ninterface AlertCardProps {\n  /**\n   * Override the the default element\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged using emotion's `cx` function\n   *\n   * @default \"section\"\n   */\n  as?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  /**\n   * color theme for alert\n   * @default \"light\"\n   */\n  theme?: \"light\" | \"dark\";\n\n  heading: React.ReactNode;\n\n  /**\n   * actions could be a button\n   * or a tooltip or anything the Alert should display after the children\n   */\n  actions?: React.ReactNode;\n\n  /**\n   * The content of the card, appears below the title\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Override how the `header` is rendered. You can pass either an intrinisic\n   * jsx element as a string (like \"h1\") or a react element (`<h1 />`)\n   *\n   * If you pass a react element, props that we add are spread onto the input.\n   *\n   * @default \"h2\"\n   */\n  headingAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  /**\n   * callback for handling the clicks on the close button.\n   */\n  onClose: () => void;\n\n  /**\n   * whether or not to include the 'x' button\n   * which calls 'onClose'\n   */\n  dismissable?: boolean;\n\n  /**\n   * layout for longer content\n   *\n   * @default false\n   */\n  extended?: boolean;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /**\n   * Type of alert, this is used to determine the color and icon in the title\n   */\n  type: \"info\" | \"warn\" | \"error\" | \"success\";\n}\n\nexport const AlertCard: React.FC<AlertCardProps> = ({\n  as = \"section\",\n  heading,\n  onClose,\n  dismissable = true,\n  actions,\n  headingAs = \"h2\",\n  children,\n  theme: propTheme,\n  extended = false,\n  type,\n  ...otherProps\n}) => {\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propTheme || providerTheme;\n\n  const { Icon, color } = useMemo(() => {\n    switch (type) {\n      case \"info\":\n        return { color: colors.blue, Icon: IconInfoSolid };\n      case \"warn\":\n        return { color: colors.orange, Icon: IconWarningSolid };\n      case \"error\":\n        return { color: colors.red, Icon: IconErrorSolid };\n      case \"success\":\n        return { color: colors.green, Icon: IconSuccessSolid };\n      default:\n        assertUnreachable(type);\n    }\n  }, [type]);\n\n  return (\n    <ClassNames>\n      {({ css, cx }) =>\n        React.cloneElement(\n          React.isValidElement(as)\n            ? as\n            : typeof as === \"string\"\n            ? React.createElement(as)\n            : assertUnreachable(as),\n          {\n            ...otherProps,\n            className: cx(\n              css({\n                backgroundColor:\n                  theme === \"light\"\n                    ? colors.white\n                    : theme === \"dark\"\n                    ? colors.midnight.darker\n                    : assertUnreachable(theme),\n                color:\n                  theme === \"light\"\n                    ? colors.black.base\n                    : theme === \"dark\"\n                    ? colors.white\n                    : assertUnreachable(theme),\n                boxShadow: `0 4px 8px 0 rgba(0, 0, 0, .04)`,\n                borderStyle: \"solid\",\n                borderRadius: 4,\n                borderWidth: 1,\n                borderColor:\n                  theme === \"light\"\n                    ? colors.silver.dark\n                    : theme === \"dark\"\n                    ? colors.midnight.dark\n                    : assertUnreachable(theme),\n                padding: 15,\n              }),\n              otherProps.className,\n              React.isValidElement(as) && as.props.className,\n            ),\n          },\n          <>\n            <div\n              css={{\n                marginBottom: extended ? 14 : 6,\n                display: \"flex\",\n              }}\n            >\n              <ClassNames>\n                {({ css, cx }) => {\n                  const headingProps = {\n                    className: cx(\n                      css({\n                        fontWeight: 600,\n                        marginBottom: 0,\n                        marginTop: 0,\n                        width: \"100%\",\n                        display: \"flex\",\n                        color:\n                          theme === \"light\"\n                            ? color.darker\n                            : theme === \"dark\"\n                            ? color.lighter\n                            : assertUnreachable(theme),\n                        ...base.base,\n                      }),\n                    ),\n                    children: (\n                      <Fragment>\n                        <Icon\n                          css={{\n                            width: 20,\n                            height: 20,\n                            color: color.base,\n                            marginRight: 13,\n                            \"& .inner\": theme === \"dark\" &&\n                              type !== \"warn\" && { fill: colors.white },\n                          }}\n                        />\n                        {heading}\n                      </Fragment>\n                    ),\n                  };\n\n                  return React.isValidElement(headingAs)\n                    ? React.cloneElement(headingAs, {\n                        ...headingProps,\n                        className: classnames(\n                          headingProps.className,\n                          headingAs.props.className,\n                        ),\n                      })\n                    : React.createElement(headingAs, headingProps);\n                }}\n              </ClassNames>\n              {dismissable && (\n                <Button\n                  onClick={onClose}\n                  size=\"small\"\n                  feel=\"flat\"\n                  theme={theme}\n                  css={{\n                    marginRight: -9,\n                    marginTop: -9,\n                    color:\n                      theme === \"light\"\n                        ? colors.grey.lighter\n                        : colors.midnight.lighter,\n                    \":hover\": {\n                      backgroundColor: \"transparent\",\n                      color:\n                        theme === \"light\"\n                          ? colors.grey.light\n                          : colors.midnight.lightest,\n                    },\n                  }}\n                  color={\n                    {\n                      light: colors.grey.lighter,\n                      dark: colors.midnight.lighter,\n                    }[theme]\n                  }\n                  icon={\n                    <IconClose\n                      css={{\n                        width: 10,\n                        height: 10,\n                      }}\n                    />\n                  }\n                />\n              )}\n            </div>\n\n            {extended && (\n              <hr\n                css={{\n                  height: 1,\n                  borderWidth: 0,\n                  backgroundColor:\n                    theme === \"light\"\n                      ? colors.silver.dark\n                      : theme === \"dark\"\n                      ? colors.midnight.base\n                      : assertUnreachable(theme),\n                  marginTop: 14,\n                  marginBottom: 14,\n                }}\n              />\n            )}\n            <div css={{ marginLeft: extended ? 0 : 33 }}>\n              <div\n                css={{\n                  ...base.small,\n                  marginBottom: actions ? 13 : 0,\n                }}\n              >\n                {children}\n              </div>\n\n              {actions}\n            </div>\n          </>,\n        )\n      }\n    </ClassNames>\n  );\n};\n\nAlertCard.propTypes = {\n  extended: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n  heading: PropTypes.node.isRequired,\n  actions: PropTypes.node,\n  type: PropTypes.oneOf([\"info\", \"warn\", \"error\", \"success\"] as const)\n    .isRequired,\n  headingAs: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.string.isRequired as any, // Using PropTypes.string to match keyof JSX.IntrinsicElements\n  ]),\n};\n"],"names":["AlertCard","_a","_b","as","heading","onClose","_c","dismissable","actions","_d","headingAs","children","propTheme","_e","extended","type","otherProps","providerTheme","useSpaceKitProvider","theme","_f","useMemo","color","colors","blue","Icon","IconInfoSolid","orange","IconWarningSolid","red","IconErrorSolid","green","IconSuccessSolid","assertUnreachable","jsx","ClassNames","css","cx","React","cloneElement","isValidElement","createElement","className","backgroundColor","white","midnight","darker","black","base","boxShadow","borderStyle","borderRadius","borderWidth","borderColor","silver","dark","padding","props","marginBottom","display","headingProps","fontWeight","marginTop","width","lighter","Fragment","height","marginRight","fill","classnames","Button","onClick","size","feel","grey","light","lightest","icon","IconClose","marginLeft","propTypes","PropTypes","bool","func","isRequired","node","oneOf","oneOfType","element","string"],"mappings":"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"}