{"version":3,"file":"Modal.js","sources":["../src/Modal/Modal.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, css, ClassNames } from \"@emotion/core\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { motion, MotionProps } from \"framer-motion\";\nimport * as typography from \"../typography\";\nimport { colors } from \"../colors\";\nimport type { Property } from \"csstype\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\n\ninterface Props {\n  /**\n   * Class name that will be applied to the content `div`, or the component\n   * passed as the `as` prop.\n   */\n  className?: string;\n\n  /**\n   * Override the the default element used to content of the modal\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged. You can use this to make the modal a\n   * `<form>`\n   *\n   * @default `<div />`\n   */\n  as?: React.ReactElement<any, keyof typeof motion>;\n\n  /**\n   * Override the outermost\n   *\n   * All props provided will be merged with props that `Button` adds, including\n   * `className`s being merged.\n   *\n   * @default <button />\n   */\n  containerAs?: React.ReactElement;\n\n  /**\n   * Optional primary action, usually a button\n   *\n   * Do not apply any layout via css; this will be handled internally for consistency\n   */\n  primaryAction?: React.ReactNode;\n\n  /**\n   * Optional secondary action, usually a button\n   *\n   * Do not apply any layout via css; this will be handled internally for consistency\n   */\n  secondaryAction?: React.ReactNode;\n\n  children?: React.ReactNode;\n\n  /**\n   * Limit vertical overflow to children or let the entire modal scroll.\n   *\n   * Defaults to \"modal\".\n   */\n  verticalScrollMode?: \"modal\" | \"children\";\n\n  /**\n   * Optional description to show of the modal\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Text to display in the bottom left of a modal/dialog\n   */\n  bottomLeftText?: React.ReactNode;\n\n  /**\n   * Callback to call when the modal is closed\n   */\n  onClose?: () => void;\n\n  /**\n   * Size to show the modal at\n   */\n  size: \"small\" | \"medium\" | \"large\" | \"xlarge\";\n\n  /**\n   * Title of the modal\n   */\n  title?: React.ReactNode;\n}\n\nconst modalBackdrop = css`\n  position: fixed;\n  display: flex;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n\n  &:after {\n    position: fixed;\n    z-index: 10;\n    content: \"\";\n    background-color: ${colors.black.base};\n    opacity: 0.55;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -1;\n    height: 100vh;\n    width: 100vw;\n  }\n`;\n\ntype TLength = string | 0 | number;\n\nfunction getModalWidth(size: Props[\"size\"]): Property.Width<TLength> {\n  switch (size) {\n    case \"small\":\n      return 460;\n    case \"medium\":\n      return 600;\n    case \"large\":\n      return 800;\n    case \"xlarge\":\n      return 1048;\n    /* istanbul ignore next */\n    default:\n      throw assertUnreachable(size);\n  }\n}\n\nexport const Modal: React.FC<Props> = ({\n  as = <div />,\n  className,\n  containerAs = <div />,\n  title,\n  description,\n  children,\n  verticalScrollMode = \"modal\",\n  onClose,\n  size,\n  bottomLeftText,\n  primaryAction,\n  secondaryAction,\n}) => {\n  const backdropMouseDownTargetRef = useRef<EventTarget | null>(null);\n  const onMouseDown = useCallback((e: MouseEvent) => {\n    backdropMouseDownTargetRef.current = e.target;\n  }, []);\n\n  const { disableAnimations } = useSpaceKitProvider();\n\n  useEffect(() => {\n    function handleKeyDown(event: KeyboardEvent) {\n      if (event.code === \"Escape\" && onClose) {\n        onClose();\n      }\n    }\n\n    // add an event listener for all clicks\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, [onClose]);\n\n  const type: keyof typeof motion | React.ComponentType =\n    as.props.__EMOTION_TYPE_PLEASE_DO_NOT_USE__ || as.type;\n  if (!type || type === \"custom\") {\n    // TypeScript will give us some protection here, but we need to guarantee\n    // that `as` is an element that `motion` supports\n    throw new TypeError(\n      \"`as` must be an element with a corresponding element in `Framer.motion`\",\n    );\n  } else if (\n    typeof type === \"string\" &&\n    !motion[type] &&\n    !React.isValidElement(as)\n  ) {\n    throw new TypeError(\n      \"Could not determine the type of `as` to clone that element using Framer. This is most likely because it's a ref forwarding component and we don't have any way of determining what type it will render to.\",\n    );\n  }\n\n  /**\n   * Framer motion component to render. The type will be taken from the `as`\n   * prop.\n   *\n   * We have to strip the type because we'll get an error about the union being\n   * too complex to model because `motion` has over 100 options.\n   */\n  const MotionComponent: React.ComponentType<MotionProps> = React.useMemo(\n    () =>\n      typeof type === \"string\"\n        ? motion[type]\n        : motion.custom<MotionProps>(type),\n    [type],\n  );\n\n  return (\n    <ClassNames>\n      {({ css, cx }) => {\n        return React.cloneElement(\n          containerAs,\n          {\n            onMouseDown,\n            onClick: (event: MouseEvent) => {\n              if (backdropMouseDownTargetRef.current === event.target) {\n                onClose?.();\n              }\n            },\n            ...containerAs.props,\n            className: cx(css(modalBackdrop), containerAs.props.className),\n          },\n          <MotionComponent\n            {...as.props}\n            ref={(as as any).ref}\n            animate={{ opacity: 1, scale: 1 }}\n            initial={disableAnimations ? false : { opacity: 0, scale: 0.9 }}\n            transition={{\n              scale: {\n                type: \"spring\",\n                stiffness: 150,\n                damping: 200,\n                mass: 0.2,\n                velocity: 8,\n              },\n            }}\n            onClick={(event: React.MouseEvent<any>) => {\n              event.stopPropagation();\n\n              as.props.onClick?.(event);\n            }}\n            className={cx(\n              css(\n                {\n                  backgroundColor: \"white\",\n                  borderRadius: 12,\n                  boxShadow: `0 16px 32px 0 rgba(0, 0, 0, 0.12), 0 0 0 1px rgba(18, 21, 26, 0.04)`,\n                  maxHeight: \"80%\",\n                  minWidth: 400,\n                  opacity: 1,\n                  overflowY: verticalScrollMode === \"modal\" ? \"auto\" : \"hidden\",\n                  padding:\n                    size === \"large\" || size === \"xlarge\" ? \"40px\" : \"32px\",\n                  position: \"absolute\",\n                  width: getModalWidth(size),\n                  zIndex: 11,\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  left: 0,\n                  right: 0,\n                },\n                verticalScrollMode === \"children\" && {\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                },\n              ),\n              className,\n              as.props.className,\n              // If the parent component is using emotion with the jsx pragma, we\n              // have to get fancy and intercept the styles to use with the\n              // `ClassNames` wrapper.\n              as.props.css ? css(as.props.css.styles) : null,\n            )}\n          >\n            <div>\n              {title && (\n                <div>\n                  <div\n                    css={{\n                      color: colors.black.base,\n                      marginBottom: 10,\n                      ...(size === \"small\"\n                        ? { ...typography.base.large, fontWeight: 600 }\n                        : typography.base.xxlarge),\n                    }}\n                  >\n                    {title}\n                  </div>\n                </div>\n              )}\n              {description && (\n                <div\n                  css={{ ...typography.base.base, color: colors.black.base }}\n                >\n                  {description}\n                </div>\n              )}\n            </div>\n            <div\n              css={css(\n                (title || description) && {\n                  marginTop:\n                    size === \"large\" || size === \"xlarge\"\n                      ? 24\n                      : size === \"medium\"\n                      ? 16\n                      : 12,\n                },\n                verticalScrollMode === \"children\" && {\n                  overflowY: \"auto\",\n                },\n              )}\n            >\n              {children}\n            </div>\n            {(primaryAction || secondaryAction || bottomLeftText) && (\n              <div\n                css={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  marginTop: size === \"medium\" ? 32 : 24,\n                }}\n              >\n                {bottomLeftText && (\n                  <div css={{ marginRight: \"auto\" }}>{bottomLeftText}</div>\n                )}\n                {secondaryAction && (\n                  <div css={{ marginRight: 12 }}>{secondaryAction}</div>\n                )}\n                {primaryAction && <div>{primaryAction}</div>}\n              </div>\n            )}\n          </MotionComponent>,\n        );\n      }}\n    </ClassNames>\n  );\n};\n"],"names":["modalBackdrop","css","colors","black","base","getModalWidth","size","assertUnreachable","Modal","_a","_b","as","jsx","className","_c","containerAs","title","description","children","_d","verticalScrollMode","onClose","bottomLeftText","primaryAction","secondaryAction","backdropMouseDownTargetRef","useRef","onMouseDown","useCallback","e","current","target","disableAnimations","useSpaceKitProvider","useEffect","handleKeyDown","event","code","document","addEventListener","removeEventListener","type","props","__EMOTION_TYPE_PLEASE_DO_NOT_USE__","TypeError","motion","React","isValidElement","MotionComponent","useMemo","custom","ClassNames","cx","cloneElement","onClick","ref","animate","opacity","scale","initial","transition","stiffness","damping","mass","velocity","stopPropagation","backgroundColor","borderRadius","boxShadow","maxHeight","minWidth","overflowY","padding","position","width","zIndex","marginLeft","marginRight","left","right","display","flexDirection","styles","color","marginBottom","typography","fontWeight","marginTop","alignItems","justifyContent"],"mappings":"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"}