{"version":3,"file":"Label.js","sources":["../../src/Switch/switch/Label.tsx"],"sourcesContent":["import React from \"react\";\nimport { ClassNames } from \"@emotion/core\";\n\ntype LabelProps = React.DetailedHTMLProps<\n  React.LabelHTMLAttributes<HTMLLabelElement>,\n  HTMLLabelElement\n>;\n\n/**\n * Label used by `Toggle`\n *\n * This can be used to emulate what a label would look like if it were used by a\n * `Toggle` in the even that you can't use the `Toggle`'s label.\n */\nexport const Label: React.FC<LabelProps> = ({\n  children,\n  className,\n  ...props\n}) => {\n  return (\n    <ClassNames>\n      {({ css, cx }) => (\n        <label\n          {...props}\n          className={cx(\n            css({\n              alignItems: \"center\",\n              display: \"flex\",\n              fontWeight: 600,\n            }),\n            className,\n          )}\n        >\n          {children}\n        </label>\n      )}\n    </ClassNames>\n  );\n};\n"],"names":["Label","_a","children","className","props","React","ClassNames","css","cx","alignItems","display","fontWeight"],"mappings":";;;;;;;;;;;AAQA;;;;;;;AAMA,IAAaA,KAAK,GAAyB,UAACC,EAAD;MACzCC,QAAQ,cAAR;MACAC,SAAS,eADT;MAEGC,KAAK,qBAHkC,WAAA,aAAA,EAC1C;;sBAKEC,4BAAA,CAACC,eAAD,MAAA,EACG,UAACL,EAAD;QAAGM,GAAG;QAAEC,EAAE;wBACTH,4BAAA,QAAA,sBACMD;MACJD,SAAS,EAAEK,EAAE,CACXD,GAAG,CAAC;QACFE,UAAU,EAAE,QADV;QAEFC,OAAO,EAAE,MAFP;QAGFC,UAAU,EAAE;OAHX,CADQ,EAMXR,SANW;MAFf,EAWGD,QAXH,CADgB;GADpB,CADF;CALK;;;;"}