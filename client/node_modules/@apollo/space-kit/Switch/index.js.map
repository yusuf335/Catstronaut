{"version":3,"file":"index.js","sources":["../src/Switch/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ClassNames } from \"@emotion/core\";\nimport { ShadedColor, colors } from \"../colors\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useSwitch } from \"@react-aria/switch\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\nimport { motion } from \"framer-motion\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\nimport { Label } from \"./switch/Label\";\n\ntype SwitchProps = {\n  /**\n   * `className` to apply to the bounding `label`\n   */\n  className?: string;\n  /**\n   * `style` to apply to the bounding `label`\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Color to use for the checkbox itself. The check color and the border color\n   * will be automatically calculated.\n   *\n   * @default colors.blue.base\n   */\n  color?: ShadedColor;\n\n  /**\n   * Force the focused styling\n   *\n   * This prop is typed as `never` so you can never legally pass it. This is\n   * intended only for testing because there's no other way to test a focus\n   * ring. The only place we're actually using this is in an `mdx` file, which\n   * doesn't check props with TypeScript.\n   *\n   * There's got to be a better way to do this; I just don't know what it is\n   * :shrug:\n   */\n  isFocusVisible?: never;\n\n  /**\n   * Size to display the toggle at\n   *\n   * @default \"normal\"\n   */\n  size?: \"normal\" | \"large\";\n\n  /**\n   * Show the \"ON\" or \"OFF\" textual state\n   *\n   * @default `true`\n   */\n  showTextualState?: boolean;\n\n  theme?: \"light\" | \"dark\";\n} & Parameters<typeof useSwitch>[0] &\n  Parameters<typeof useFocusRing>[0];\n\nexport const Switch: React.FC<SwitchProps> & { Label: typeof Label } = ({\n  className,\n  style,\n  color = colors.blue.base,\n  isFocusVisible: isFocusVisibleFromProps,\n  showTextualState = true,\n  size = \"normal\",\n  theme: propsTheme,\n  ...props\n}) => {\n  const state = useToggleState(props);\n  const ref = React.useRef<HTMLInputElement | null>(null);\n  const { inputProps } = useSwitch(props, state, ref);\n  const {\n    isFocusVisible: isFocusVisibleFromFocusRing,\n    focusProps,\n  } = useFocusRing(props);\n  // FYI: Hooks can't be called conditionally, so we must call the hook and then\n  // use the `||` in the subseuent line instead of combining them.\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propsTheme || providerTheme;\n\n  const isFocusVisible =\n    (!props.isDisabled && isFocusVisibleFromProps) ||\n    isFocusVisibleFromFocusRing;\n\n  /** Size, in pixels, of the dot that will be the switch */\n  const dotSize =\n    size === \"normal\" ? 12 : size === \"large\" ? 18 : assertUnreachable(size);\n  const borderSize =\n    size === \"normal\" ? 2 : size === \"large\" ? 3 : assertUnreachable(size);\n\n  return (\n    <ClassNames>\n      {({ css, cx }) => (\n        <Label\n          className={cx(\n            css({\n              opacity: props.isDisabled ? 0.5 : undefined,\n              position: \"relative\",\n            }),\n            className,\n          )}\n          style={style}\n        >\n          <VisuallyHidden>\n            <input {...inputProps} {...focusProps} ref={ref} />\n          </VisuallyHidden>\n\n          <div\n            className={css({\n              flex: 1,\n              marginRight: showTextualState\n                ? 12\n                : size === \"large\"\n                ? 30\n                : size === \"normal\"\n                ? undefined\n                : assertUnreachable(size),\n            })}\n          >\n            {props.children}\n          </div>\n\n          {showTextualState && (\n            <div\n              aria-hidden\n              className={css({\n                color:\n                  theme === \"light\"\n                    ? props.isDisabled\n                      ? undefined\n                      : state.isSelected\n                      ? undefined\n                      : colors.grey.base\n                    : theme === \"dark\"\n                    ? props.isDisabled\n                      ? undefined\n                      : state.isSelected\n                      ? colors.white\n                      : colors.midnight.lighter\n                    : assertUnreachable(theme),\n                fontWeight: state.isSelected ? 600 : 400,\n                marginRight: 8,\n              })}\n            >\n              {state.isSelected ? \"ON\" : \"OFF\"}\n            </div>\n          )}\n\n          <div\n            aria-hidden\n            key={props.isDisabled ? \"disabled\" : \"enabled\"}\n            className={css({\n              backgroundColor: state.isSelected ? color : colors.grey.light,\n              borderRadius: dotSize / 2 + borderSize,\n              boxShadow: [\n                isFocusVisible && `0 0 0 2px ${colors.blue.lighter}`,\n                !props.isDisabled && \"inset 0 0 1px 0 rgba(18, 21, 26, 0.4)\",\n              ]\n                // The generic attached to the filter return type will indicate\n                // to TypeScript that we're stripping out all non-strings,\n                // meaning the booleans.\n                .filter((value): value is string => !!value)\n                .join(\", \"),\n              cursor: !props.isDisabled ? \"pointer\" : undefined,\n              height: dotSize + borderSize * 2,\n              padding: borderSize,\n              position: \"relative\",\n              width: (8 / 3) * dotSize,\n            })}\n          >\n            <motion.div\n              animate={{\n                x: state.isSelected ? dotSize + borderSize * 2 : 0,\n              }}\n              initial={false}\n              transition={{\n                type: \"spring\",\n                stiffness: 150,\n                damping: 200,\n                mass: 0.2,\n                velocity: 8,\n              }}\n              className={css({\n                backgroundColor: colors.white,\n                borderRadius: \"100%\",\n                height: dotSize,\n                position: \"absolute\",\n                top: borderSize,\n                width: dotSize,\n              })}\n            />\n          </div>\n        </Label>\n      )}\n    </ClassNames>\n  );\n};\n\nSwitch.Label = Label;\n"],"names":["Switch","_a","className","style","_b","color","colors","blue","base","isFocusVisibleFromProps","_c","showTextualState","_d","size","propsTheme","props","state","useToggleState","ref","React","useRef","inputProps","useSwitch","_e","useFocusRing","isFocusVisibleFromFocusRing","focusProps","providerTheme","useSpaceKitProvider","theme","isFocusVisible","isDisabled","dotSize","assertUnreachable","borderSize","ClassNames","css","cx","Label","opacity","undefined","position","VisuallyHidden","flex","marginRight","children","isSelected","grey","white","midnight","lighter","fontWeight","key","backgroundColor","light","borderRadius","boxShadow","filter","value","join","cursor","height","padding","width","motion","div","animate","x","initial","transition","type","stiffness","damping","mass","velocity","top"],"mappings":"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"}