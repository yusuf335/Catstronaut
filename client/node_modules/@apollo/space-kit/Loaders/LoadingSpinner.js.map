{"version":3,"file":"LoadingSpinner.js","sources":["../src/Loaders/LoadingSpinner.tsx"],"sourcesContent":["/** @jsx jsx */\nimport React from \"react\";\nimport type { Property } from \"csstype\";\nimport { jsx, keyframes } from \"@emotion/core\";\nimport { colors } from \"../colors\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\n\nexport type Size = \"large\" | \"medium\" | \"small\" | \"xsmall\" | \"2xsmall\";\nexport type Theme = \"light\" | \"dark\" | \"grayscale\";\ninterface Props {\n  /**\n   * Class name that will be applied to the svg\n   */\n  className?: string;\n\n  /**\n   * Theme for the spinner\n   * @default \"light\"\n   */\n  theme?: Theme;\n\n  /**\n   * Size of the spinner\n   * @default \"medium\"\n   */\n  size?: Size;\n}\n\nexport const LoadingSpinner = React.forwardRef<SVGSVGElement, Props>(\n  ({ theme: propTheme, size = \"medium\", className, ...props }, ref) => {\n    const { theme: providerTheme } = useSpaceKitProvider();\n    const theme = propTheme || providerTheme;\n\n    /* Length of animation */\n    const DURATION = 1000;\n\n    const SPIN = keyframes`\n    0% { transform: rotate(0) }\n    100% { transform: rotate(360deg) }\n  `;\n\n    const SIZE_MAP: Record<Size, number> = {\n      large: 90,\n      medium: 64,\n      small: 48,\n      xsmall: 32,\n      \"2xsmall\": 16,\n    };\n\n    const THEME_MAP: Record<\n      Theme,\n      {\n        orbitColor: Property.Color;\n        orbitOpacity: Property.Opacity;\n        asteroidColor: Property.Color;\n      }\n    > = {\n      light: {\n        orbitColor: colors.silver.base,\n        orbitOpacity: 1,\n        asteroidColor: colors.blue.base,\n      },\n      dark: {\n        orbitColor: colors.white,\n        orbitOpacity: 0.5,\n        asteroidColor: colors.white,\n      },\n      grayscale: {\n        orbitColor: colors.silver.darker,\n        orbitOpacity: 1,\n        asteroidColor: colors.grey.light,\n      },\n    };\n\n    const { disableAnimations } = useSpaceKitProvider();\n\n    const { orbitColor, orbitOpacity, asteroidColor } = THEME_MAP[theme];\n\n    const pixelSize = SIZE_MAP[size];\n\n    const mountTime = React.useRef(Date.now());\n    const mountDelay = disableAnimations ? 0 : -(mountTime.current % DURATION);\n\n    return (\n      <svg\n        className={className}\n        ref={ref}\n        role=\"progressbar\"\n        viewBox=\"0 0 100 100\"\n        css={{\n          width: pixelSize,\n          height: pixelSize,\n        }}\n        {...props}\n      >\n        <circle\n          strokeWidth=\"8\"\n          stroke={orbitColor}\n          strokeOpacity={orbitOpacity}\n          fill=\"transparent\"\n          r=\"41\"\n          cx=\"50\"\n          cy=\"50\"\n        />\n        <g transform=\"translate(50 50)\">\n          <circle\n            css={{\n              animation: `${SPIN} ${DURATION}ms linear infinite`,\n              willChange: \"transform\",\n              animationDelay: `${mountDelay}ms`,\n            }}\n            fill={asteroidColor}\n            r=\"10\"\n            cx=\"40\"\n            cy=\"0\"\n          />\n        </g>\n      </svg>\n    );\n  },\n);\n"],"names":["LoadingSpinner","React","forwardRef","_a","ref","propTheme","_b","size","className","props","providerTheme","useSpaceKitProvider","theme","DURATION","SPIN","keyframes","SIZE_MAP","large","medium","small","xsmall","THEME_MAP","light","orbitColor","colors","silver","base","orbitOpacity","asteroidColor","blue","dark","white","grayscale","darker","grey","disableAnimations","_c","pixelSize","mountTime","useRef","Date","now","mountDelay","current","jsx","role","viewBox","css","width","height","strokeWidth","stroke","strokeOpacity","fill","r","cx","cy","transform","animation","willChange","animationDelay"],"mappings":";;;;;;;;;;;;;IA4BaA,cAAc,gBAAGC,cAAK,CAACC,UAAN,CAC5B,UAACC,EAAD,EAA6DC,GAA7D;MAAUC,SAAS,WAAhB;MAAkBC,YAAlB;MAAkBC,IAAI,mBAAG,aAAzB;MAAmCC,SAAS,eAA5C;MAAiDC,KAAK,qBAAxD,QAAA,QAAA,aAAA,EAAE;;MACcC,aAAa,GAAKC,yBAAmB,QAA5C;MACFC,KAAK,GAAGP,SAAS,IAAIK,aAA3B;;;MAGMG,QAAQ,GAAG,IAAjB;MAEMC,IAAI,GAAGC,cAAS,yJAAA,kFAAA,CAAtB;MAKMC,QAAQ,GAAyB;IACrCC,KAAK,EAAE,EAD8B;IAErCC,MAAM,EAAE,EAF6B;IAGrCC,KAAK,EAAE,EAH8B;IAIrCC,MAAM,EAAE,EAJ6B;eAK1B;GALb;MAQMC,SAAS,GAOX;IACFC,KAAK,EAAE;MACLC,UAAU,EAAEC,aAAM,CAACC,MAAP,CAAcC,IADrB;MAELC,YAAY,EAAE,CAFT;MAGLC,aAAa,EAAEJ,aAAM,CAACK,IAAP,CAAYH;KAJ3B;IAMFI,IAAI,EAAE;MACJP,UAAU,EAAEC,aAAM,CAACO,KADf;MAEJJ,YAAY,EAAE,GAFV;MAGJC,aAAa,EAAEJ,aAAM,CAACO;KATtB;IAWFC,SAAS,EAAE;MACTT,UAAU,EAAEC,aAAM,CAACC,MAAP,CAAcQ,MADjB;MAETN,YAAY,EAAE,CAFL;MAGTC,aAAa,EAAEJ,aAAM,CAACU,IAAP,CAAYZ;;GArB/B;MAyBQa,iBAAiB,GAAKxB,yBAAmB,oBAAzC;MAEFyB,KAA8Cf,SAAS,CAACT,KAAD,CAAvD;MAAEW,UAAU,gBAAZ;MAAcI,YAAY,kBAA1B;MAA4BC,aAAa,mBAAzC;MAEAS,SAAS,GAAGrB,QAAQ,CAACT,IAAD,CAA1B;MAEM+B,SAAS,GAAGrC,cAAK,CAACsC,MAAN,CAAaC,IAAI,CAACC,GAAL,EAAb,CAAlB;MACMC,UAAU,GAAGP,iBAAiB,GAAG,CAAH,GAAO,EAAEG,SAAS,CAACK,OAAV,GAAoB9B,QAAtB,CAA3C;SAGE+B;IACEpC,SAAS,EAAEA;IACXJ,GAAG,EAAEA;IACLyC,IAAI,EAAC;IACLC,OAAO,EAAC;IACRC,GAAG,EAAE;MACHC,KAAK,EAAEX,SADJ;MAEHY,MAAM,EAAEZ;;KAEN5B,QAEJmC;IACEM,WAAW,EAAC;IACZC,MAAM,EAAE5B;IACR6B,aAAa,EAAEzB;IACf0B,IAAI,EAAC;IACLC,CAAC,EAAC;IACFC,EAAE,EAAC;IACHC,EAAE,EAAC;MAELZ;IAAGa,SAAS,EAAC;KACXb;IACEG,GAAG,EAAE;MACHW,SAAS,EAAK5C,IAAI,MAAJ,GAAQD,QAAR,uBADX;MAEH8C,UAAU,EAAE,WAFT;MAGHC,cAAc,EAAKlB,UAAU;;IAE/BW,IAAI,EAAEzB;IACN0B,CAAC,EAAC;IACFC,EAAE,EAAC;IACHC,EAAE,EAAC;MA/BX;CAvD0B,CAAvB;;;;;"}