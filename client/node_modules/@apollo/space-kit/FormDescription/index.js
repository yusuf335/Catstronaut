'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _tslib = require('../_tslib-bcbe0269.js');
var core = require('@emotion/core');
var React = require('react');
var React__default = _interopDefault(React);
require('../fonts/fonts.js');
var base$1 = require('../base-91f9e1df.js');
require('../mono-a0d4bd30.js');
var colors = require('../colors/colors.js');
var index = require('../index-14c98598.js');

/**
 * Component to render a form description.
 *
 * If this component is rendered in the children of `FormControl`, then
 * `FormControl` will render this element in it's layout. Otherwise, it's
 * rendered as-is.
 */

var FormDescription = function (_a) {
  var children = _a.children,
      className = _a.className,
      id = _a.id,
      style = _a.style;

  var _b = index.useFormControlInternalContext(),
      descriptionId = _b.descriptionId,
      setDescription = _b.setDescription;

  var element = React.useMemo(function () {
    return core.jsx("div", {
      className: className,
      css: core.css(_tslib.__assign(_tslib.__assign({}, base$1.small), {
        color: colors.colors.black.base,
        fontWeight: "normal"
      })),
      id: descriptionId || id,
      style: style
    }, children);
  }, [children, className, descriptionId, id, style]);
  React.useLayoutEffect(function () {
    setDescription === null || setDescription === void 0 ? void 0 : setDescription(element);
    return function () {
      return setDescription === null || setDescription === void 0 ? void 0 : setDescription(null);
    };
  }, [element, setDescription]);
  return setDescription ? null : element;
};

exports.FormDescription = FormDescription;
//# sourceMappingURL=index.js.map
