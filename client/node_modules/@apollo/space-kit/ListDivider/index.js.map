{"version":3,"file":"index.js","sources":["../src/ListDivider/index.tsx"],"sourcesContent":["/** @jsx jsx */\nimport React from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport { colors } from \"../colors\";\nimport { ListItem } from \"../ListItem\";\nimport { useListConfig, ListConfigProvider } from \"../ListConfig\";\nimport { listPadding } from \"../List\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\n\n/**\n * Divider between sections in a list\n */\nexport const ListDivider: React.FC = (props) => {\n  const listConfig = useListConfig();\n\n  // Stop click events so we don't try to close the list when clicking something\n  // non-interactive\n  const handleClick = React.useCallback<React.MouseEventHandler<HTMLHRElement>>(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n    },\n    [],\n  );\n\n  /**\n   * Indicates how much negative space we need to take to make sure the divider\n   * goes edge-to-edge\n   */\n  const horizontalOffset =\n    listConfig.margin === \"auto\"\n      ? -listPadding\n      : listConfig.margin === \"none\"\n      ? 0\n      : assertUnreachable(listConfig.margin);\n\n  return (\n    <ListConfigProvider truncate={false}>\n      <ListItem\n        interactive={false}\n        css={css({\n          alignItems: \"stretch\",\n          justifyItems: \"center\",\n          paddingLeft: 0,\n          paddingRight: 0,\n          position: \"relative\",\n          height: 17,\n        })}\n      >\n        <hr\n          {...props}\n          onClick={handleClick}\n          css={{\n            borderBottomWidth: 0,\n            borderLeftWidth: 0,\n            borderRightWidth: 0,\n            borderTopColor: colors.silver.base,\n            borderTopStyle: \"solid\",\n            borderTopWidth: 1,\n            bottom: 0,\n            left: horizontalOffset,\n            margin: 0,\n            position: \"absolute\",\n            right: horizontalOffset,\n            top: 8,\n          }}\n        />\n      </ListItem>\n    </ListConfigProvider>\n  );\n};\n"],"names":["ListDivider","props","listConfig","useListConfig","handleClick","React","useCallback","event","preventDefault","stopPropagation","horizontalOffset","margin","listPadding","assertUnreachable","jsx","ListConfigProvider","truncate","ListItem","interactive","css","alignItems","justifyItems","paddingLeft","paddingRight","position","height","onClick","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","colors","silver","base","borderTopStyle","borderTopWidth","bottom","left","right","top"],"mappings":";;;;;;;;;;;;;;;;;;AASA;;;;AAGA,IAAaA,WAAW,GAAa,UAACC,KAAD;MAC7BC,UAAU,GAAGC,mBAAa,EAAhC;;;MAIMC,WAAW,GAAGC,cAAK,CAACC,WAAN,CAClB,UAACC,KAAD;IACEA,KAAK,CAACC,cAAN;IACAD,KAAK,CAACE,eAAN;GAHgB,EAKlB,EALkB,CAApB;;;;;;MAYMC,gBAAgB,GACpBR,UAAU,CAACS,MAAX,KAAsB,MAAtB,GACI,CAACC,mBADL,GAEIV,UAAU,CAACS,MAAX,KAAsB,MAAtB,GACA,CADA,GAEAE,mCAAiB,CAACX,UAAU,CAACS,MAAZ,CALvB;SAQEG,SAACC;IAAmBC,QAAQ,EAAE;KAC5BF,SAACG;IACCC,WAAW,EAAE;IACbC,GAAG,EAAEA,QAAG,CAAC;MACPC,UAAU,EAAE,SADL;MAEPC,YAAY,EAAE,QAFP;MAGPC,WAAW,EAAE,CAHN;MAIPC,YAAY,EAAE,CAJP;MAKPC,QAAQ,EAAE,UALH;MAMPC,MAAM,EAAE;KANF;KASRX,mCACMb;IACJyB,OAAO,EAAEtB;IACTe,GAAG,EAAE;MACHQ,iBAAiB,EAAE,CADhB;MAEHC,eAAe,EAAE,CAFd;MAGHC,gBAAgB,EAAE,CAHf;MAIHC,cAAc,EAAEC,aAAM,CAACC,MAAP,CAAcC,IAJ3B;MAKHC,cAAc,EAAE,OALb;MAMHC,cAAc,EAAE,CANb;MAOHC,MAAM,EAAE,CAPL;MAQHC,IAAI,EAAE3B,gBARH;MASHC,MAAM,EAAE,CATL;MAUHa,QAAQ,EAAE,UAVP;MAWHc,KAAK,EAAE5B,gBAXJ;MAYH6B,GAAG,EAAE;;OA5Bf;CAxBK;;;;"}