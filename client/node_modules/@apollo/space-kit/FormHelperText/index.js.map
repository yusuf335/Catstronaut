{"version":3,"file":"index.js","sources":["../src/FormHelperText/index.tsx"],"sourcesContent":["/** @jsx jsx */\n/** @jsxFrag React.Fragment */\nimport * as React from \"react\";\nimport * as typography from \"../typography\";\nimport { colors } from \"../colors\";\nimport { css, jsx } from \"@emotion/core\";\nimport { IconInfo } from \"../icons/IconInfo\";\nimport { useFormControlInternalContext } from \"../shared/FormControlContext\";\n\ninterface Props {\n  children: React.ReactNode;\n  className?: string;\n  /**\n   * Indicates to show the blue (i) icon\n   */\n  showIcon?: boolean;\n}\n\n/**\n * Component to render a helper text\n *\n * This is intended to be rendered below `<FormControl>`. If this is rendered on\n * it's own; it will render `children` without any modification.\n */\nexport const FormHelperText: React.FC<Props> = ({\n  children,\n  className,\n  showIcon = false,\n}) => {\n  const { setHelper } = useFormControlInternalContext();\n\n  const element = React.useMemo(() => {\n    return (\n      <div\n        className={className}\n        css={css({\n          ...typography.base.small,\n          color: colors.grey.base,\n          display: \"flex\",\n        })}\n      >\n        {showIcon ? (\n          <IconInfo\n            css={{\n              height: 15,\n              marginRight: 8,\n              position: \"relative\",\n              top: 2,\n              width: 15,\n            }}\n          />\n        ) : null}\n\n        <div>{children}</div>\n      </div>\n    );\n  }, [className, showIcon, children]);\n\n  React.useLayoutEffect(() => {\n    // This will cause a bug if you change the `error` prop\n    setHelper?.(element);\n\n    return () => setHelper?.(null);\n  }, [element, setHelper]);\n\n  // If `setHelper` exists then we're rendering this under the form control\n  // context provider. `FormControl` will pull that element from the context and\n  // insert into the layout, so return `null`.\n  return setHelper ? null : element;\n};\n"],"names":["FormHelperText","_a","children","className","_b","showIcon","setHelper","useFormControlInternalContext","element","React","jsx","css","typography","color","colors","grey","base","display","IconInfo","height","marginRight","position","top","width"],"mappings":";;;;;;;;;;;;;;;;;AAkBA;;;;;;;AAMA,IAAaA,cAAc,GAAoB,UAACC,EAAD;MAC7CC,QAAQ;MACRC,SAAS;MACTC;MAAAC,QAAQ,mBAAG;MAEHC,SAAS,GAAKC,mCAA6B,YAA3C;MAEFC,OAAO,GAAGC,aAAA,CAAc;WAE1BC;MACEP,SAAS,EAAEA;MACXQ,GAAG,EAAEA,QAAG,qCACHC;QACHC,KAAK,EAAEC,aAAM,CAACC,IAAP,CAAYC;QACnBC,OAAO,EAAE;QAHH;OAMPZ,QAAQ,GACPK,SAACQ;MACCP,GAAG,EAAE;QACHQ,MAAM,EAAE,EADL;QAEHC,WAAW,EAAE,CAFV;QAGHC,QAAQ,EAAE,UAHP;QAIHC,GAAG,EAAE,CAJF;QAKHC,KAAK,EAAE;;MAPJ,GAUL,MAEJb,sBAAMR,UArBV;GADc,EAyBb,CAACC,SAAD,EAAYE,QAAZ,EAAsBH,QAAtB,CAzBa,CAAhB;EA2BAO,qBAAA,CAAsB;;IAEpBH,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAGE,OAAH,CAAT;WAEO;aAAMF,SAAS,SAAT,IAAAA,SAAS,WAAT,SAAA,GAAAA,SAAS,CAAG,IAAH;KAAtB;GAJF,EAKG,CAACE,OAAD,EAAUF,SAAV,CALH;;;;SAUOA,SAAS,GAAG,IAAH,GAAUE,OAA1B;CA5CK;;;;"}