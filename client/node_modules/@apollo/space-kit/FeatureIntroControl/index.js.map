{"version":3,"file":"index.js","sources":["../src/FeatureIntroControl/index.tsx"],"sourcesContent":["/** @jsx jsx */\nimport React, { useMemo } from \"react\";\nimport { colors } from \"../colors\";\nimport { ClassNames, jsx } from \"@emotion/core\";\nimport { As, createElementFromAs } from \"../shared/createElementFromAs\";\nimport {\n  FeatureIntroControlContextProvider,\n  useFeatureIntroControlInternalContext,\n} from \"../shared/FeatureIntroControlContext\";\nimport uniqueId from \"lodash/uniqueId\";\n\n/**\n * The direction of either the tooltip coming from the wizard\n * or the image associated with the wizard.\n *\n */\nexport type Direction = \"top\" | \"bottom\" | \"left\" | \"right\";\n\ninterface FeatureIntroControlProps\n  extends Pick<\n    React.DetailedHTMLProps<\n      React.HTMLAttributes<HTMLDivElement>,\n      HTMLDivElement\n    >,\n    \"className\" | \"style\"\n  > {\n  /**\n   * The placement of the image relative to the text.\n   */\n  imagePlacement?: Direction;\n  /**\n   * Override how the outermost container is rendered.\n   *\n   * @default \"div\"\n   */\n  containerAs?: As;\n  /**\n   * This ID will be used to tie all components together with accessibility\n   */\n  id?: string;\n  /**\n   * Override the default width\n   */\n  width?: string;\n  /**\n   * Override the default height\n   */\n  height?: string;\n}\n\nconst FeatureIntroControl: React.FC<FeatureIntroControlProps> = ({\n  imagePlacement = \"left\",\n  width,\n  height,\n  className,\n  containerAs = \"div\",\n  children,\n  ...props\n}) => {\n  const featureIntroContext = useFeatureIntroControlInternalContext();\n  const [heading, content, dismissButton, learnMoreLink, image] = [\n    featureIntroContext?.heading,\n    featureIntroContext?.content,\n    featureIntroContext?.dismissButton,\n    featureIntroContext?.learnMoreLink,\n    featureIntroContext?.image,\n  ];\n\n  /**\n   * Choose flex-direction based on imageDirection\n   */\n  const flexDirection = useMemo(() => {\n    switch (imagePlacement) {\n      case \"bottom\":\n        return \"column-reverse\";\n      case \"top\":\n        return \"column\";\n      case \"right\":\n        return \"row-reverse\";\n      default:\n        // left\n        return \"row\";\n    }\n  }, [imagePlacement]);\n\n  /**\n   * The width and height calculations for this component depend on whether or not there is an image,\n   * and whether or not there was a prop passed for width & height.\n   *\n   * By default, if an image is added the width / height is doubled respectively\n   * depending on whether the image direction is horizontal (left / right) or vertical(top / bottom)\n   *\n   * If a width or height is inputted, that height / width is not changed with an image\n   **/\n  const { finalWidth, finalHeight } = useMemo(() => {\n    const [baseWidth, baseHeight] = [248, 180];\n    const horizontalImage =\n      image && (imagePlacement === \"right\" || imagePlacement === \"left\");\n    const verticalImage =\n      image && (imagePlacement === \"top\" || imagePlacement === \"bottom\");\n    const defaultWidth = horizontalImage ? baseWidth * 2 : baseWidth;\n    const defaultHeight = verticalImage ? baseHeight * 2 : baseHeight;\n\n    return {\n      finalWidth: width || defaultWidth,\n      finalHeight: height || defaultHeight,\n    };\n  }, [height, image, imagePlacement, width]);\n\n  return (\n    <ClassNames>\n      {({ css, cx }) => {\n        return React.cloneElement(\n          createElementFromAs(containerAs),\n          {\n            ...props,\n            className: cx(\n              css({\n                width: finalWidth,\n                height: finalHeight,\n              }),\n              className,\n              React.isValidElement(containerAs) && containerAs.props.className,\n            ),\n            style: {\n              ...props.style,\n              ...(React.isValidElement(containerAs) && containerAs.props.style),\n            },\n          },\n          <div\n            css={{\n              backgroundColor: colors.white,\n              color: colors.grey.darker,\n              borderColor: colors.white,\n              borderRadius: 4,\n              display: \"flex\",\n              flexDirection,\n              height: finalHeight,\n            }}\n          >\n            {image}\n            <div\n              css={{\n                padding: 24,\n                paddingBottom: 20,\n                flexBasis: image ? \"50%\" : \"auto\",\n              }}\n            >\n              <div css={{ paddingBottom: 12 }}>{heading}</div>\n              {content}\n              <div\n                css={css({\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                })}\n              >\n                {learnMoreLink}\n                {dismissButton}\n                {children}\n              </div>\n            </div>\n          </div>,\n        );\n      }}\n    </ClassNames>\n  );\n};\n\nconst FeatureIntroControlWrapper: React.FC<React.ComponentProps<\n  typeof FeatureIntroControl\n>> = (props) => {\n  /**\n   * Backup ID to be used if none are passed in props.\n   *\n   * Use `useMemo` so this is consistent for the lifecycle of this element.\n   */\n  const fallbackId = useMemo(\n    () => uniqueId(\"space-kit-feature-intro-control-\"),\n    [],\n  );\n  const id = props.id ?? fallbackId;\n\n  return (\n    <FeatureIntroControlContextProvider id={id}>\n      <FeatureIntroControl {...props} id={id} />\n    </FeatureIntroControlContextProvider>\n  );\n};\n\nexport { FeatureIntroControlWrapper as FeatureIntroControl };\n"],"names":["FeatureIntroControl","_a","_b","imagePlacement","width","height","className","_c","containerAs","children","props","featureIntroContext","useFeatureIntroControlInternalContext","_d","heading","content","dismissButton","learnMoreLink","image","flexDirection","useMemo","_e","baseWidth","baseHeight","horizontalImage","verticalImage","defaultWidth","defaultHeight","finalWidth","finalHeight","jsx","ClassNames","css","cx","React","cloneElement","createElementFromAs","isValidElement","style","backgroundColor","colors","white","color","grey","darker","borderColor","borderRadius","display","padding","paddingBottom","flexBasis","justifyContent","FeatureIntroControlWrapper","fallbackId","uniqueId","id","FeatureIntroControlContextProvider"],"mappings":"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"}