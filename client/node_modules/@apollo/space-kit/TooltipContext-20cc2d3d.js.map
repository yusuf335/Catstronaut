{"version":3,"file":"TooltipContext-20cc2d3d.js","sources":["src/shared/TooltipContext.tsx"],"sourcesContent":["import * as React from \"react\";\n\ninterface State {\n  descendsFromTooltip: boolean;\n}\n\nconst defaultState: State = {\n  descendsFromTooltip: false,\n};\n\nconst TooltipContext = React.createContext<State | undefined>(undefined);\n\n/**\n * Component to indicate to descentent components that they are wrapped by a\n * `Tooltip`.\n */\nexport const TooltipContextProvider: React.FC<Partial<State>> = ({\n  children,\n  descendsFromTooltip,\n}) => {\n  const state = React.useMemo(\n    () => ({\n      descendsFromTooltip:\n        descendsFromTooltip ?? defaultState.descendsFromTooltip,\n    }),\n    [descendsFromTooltip],\n  );\n\n  return (\n    <TooltipContext.Provider value={state}>{children}</TooltipContext.Provider>\n  );\n};\n\n/**\n * Hook to extract values of `TooltipContext` with defaults applied.\n *\n * This will _not_ `throw` if used outside of a `TooltipContextProvider`.\n */\nexport function useTooltipContext(): State {\n  return React.useContext(TooltipContext) ?? defaultState;\n}\n"],"names":["defaultState","descendsFromTooltip","TooltipContext","React","undefined","TooltipContextProvider","_a","children","state","Provider","value","useTooltipContext"],"mappings":";;;;;;;AAMA,IAAMA,YAAY,GAAU;EAC1BC,mBAAmB,EAAE;CADvB;AAIA,IAAMC,cAAc,gBAAGC,mBAAA,CAAuCC,SAAvC,CAAvB;;;;;;AAMA,IAAaC,sBAAsB,GAA6B,UAACC,EAAD;MAC9DC,QAAQ;MACRN,mBAAmB;MAEbO,KAAK,GAAGL,aAAA,CACZ;WAAO;MACLF,mBAAmB,EACjBA,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,GAAAA,mBAAA,GAAuBD,YAAY,CAACC;KAFlC;GADM,EAKZ,CAACA,mBAAD,CALY,CAAd;sBASEE,mBAAA,CAACD,cAAc,CAACO,QAAhB;IAAyBC,KAAK,EAAEF;GAAhC,EAAwCD,QAAxC,CADF;CAZK;;;;;;;AAsBP,SAAgBI;;;eACPR,gBAAA,CAAiBD,cAAjB,oCAAoCF,YAA3C;;;;;;"}