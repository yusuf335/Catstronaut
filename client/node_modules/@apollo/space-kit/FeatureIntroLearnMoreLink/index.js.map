{"version":3,"file":"index.js","sources":["../src/FeatureIntroLearnMoreLink/index.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\";\nimport * as typography from \"../typography\";\nimport { jsx } from \"@emotion/core\";\nimport { colors } from \"../colors\";\nimport { useFeatureIntroControlInternalContext } from \"../shared/FeatureIntroControlContext\";\nimport { As, createElementFromAs } from \"../shared/createElementFromAs\";\n\ninterface Props\n  extends Pick<\n    React.DetailedHTMLProps<\n      React.HTMLProps<HTMLAnchorElement>,\n      HTMLAnchorElement\n    >,\n    \"className\" | \"style\" | \"id\"\n  > {\n  /**\n   * Override how the learn more link is rendered.\n   *\n   * @default \"a\"\n   */\n  as?: As;\n}\n\n/**\n * Component to render Feature Intro learn more button.\n *\n * If this component is rendered in the children of `FeatureIntroControl`, then\n * `FeatureIntroControl` will render this element in it's layout. Otherwise, it's\n * rendered as-is.\n */\nexport const FeatureIntroLearnMoreLink: React.FC<Props> = ({\n  as = \"a\",\n  className,\n  style,\n}) => {\n  const featureIntroContext = useFeatureIntroControlInternalContext();\n  const [featureIntroId, setLearnMoreLink] = [\n    featureIntroContext?.id,\n    featureIntroContext?.setLearnMoreLink,\n  ];\n\n  const element = React.useMemo(\n    () =>\n      React.isValidElement(as)\n        ? React.cloneElement(\n            createElementFromAs(as),\n            { className, style },\n            <div id={featureIntroId && `${featureIntroId}-learn-more-link`}>\n              <div\n                css={{\n                  color: colors.grey.base,\n                  ...typography.base.small,\n                  fontWeight: 600,\n                  padding: \"8px 5px\",\n                  marginLeft: -5,\n                  marginTop: -8,\n                }}\n              >\n                Learn more\n              </div>\n            </div>,\n          )\n        : null,\n    [as, className, featureIntroId, style],\n  );\n\n  React.useLayoutEffect(() => {\n    setLearnMoreLink?.(element);\n  }, [element, setLearnMoreLink]);\n\n  return featureIntroContext ? null : element;\n};\n"],"names":["FeatureIntroLearnMoreLink","_a","_b","as","className","style","featureIntroContext","useFeatureIntroControlInternalContext","_c","id","setLearnMoreLink","featureIntroId","element","React","createElementFromAs","jsx","css","color","colors","grey","base","typography","fontWeight","padding","marginLeft","marginTop"],"mappings":";;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;AAOA,IAAaA,yBAAyB,GAAoB,UAACC,EAAD;MACxDC;MAAAC,EAAE,mBAAG;MACLC,SAAS;MACTC,KAAK;MAECC,mBAAmB,GAAGC,2CAAqC,EAAjE;MACMC,KAAqC,CACzCF,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,SAAA,GAAAA,mBAAmB,CAAEG,EADoB,EAEzCH,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,SAAA,GAAAA,mBAAmB,CAAEI,gBAFoB,CAArC;MAACC,cAAc,QAAf;MAAiBD,gBAAgB,QAAjC;MAKAE,OAAO,GAAGC,aAAA,CACd;wBACEA,oBAAA,CAAqBV,EAArB,iBACIU,kBAAA,CACEC,uCAAmB,CAACX,EAAD,CADrB,EAEE;MAAEC,SAAS,WAAX;MAAaC,KAAK;KAFpB,EAGEU;MAAKN,EAAE,EAAEE,cAAc,IAAOA,cAAc;OAC1CI;MACEC,GAAG;QACDC,KAAK,EAAEC,aAAM,CAACC,IAAP,CAAYC;SAChBC;QACHC,UAAU,EAAE;QACZC,OAAO,EAAE;QACTC,UAAU,EAAE,CAAC;QACbC,SAAS,EAAE,CAAC;;qBAXpB,CADJ,GAmBI,IAnBJ;GAFY,EAsBd,CAACtB,EAAD,EAAKC,SAAL,EAAgBO,cAAhB,EAAgCN,KAAhC,CAtBc,CAAhB;EAyBAQ,qBAAA,CAAsB;IACpBH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,SAAA,GAAAA,gBAAgB,CAAGE,OAAH,CAAhB;GADF,EAEG,CAACA,OAAD,EAAUF,gBAAV,CAFH;SAIOJ,mBAAmB,GAAG,IAAH,GAAUM,OAApC;CAxCK;;;;"}