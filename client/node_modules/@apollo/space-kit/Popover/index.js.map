{"version":3,"file":"index.js","sources":["../src/Popover/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { AbstractTooltip } from \"../AbstractTooltip\";\nimport { TippyPopoverStyles } from \"./popover/TippyPopoverStyles\";\nimport { sizeModifier } from \"./popover/sizeModifier\";\nimport type { Modifier } from \"@popperjs/core\";\n\ninterface Props\n  extends Pick<\n    React.ComponentProps<typeof AbstractTooltip>,\n    | \"children\"\n    | \"content\"\n    | \"disabled\"\n    | \"fallbackPlacements\"\n    | \"hideOnClick\"\n    | \"matchTriggerWidth\"\n    | \"maxWidth\"\n    | \"onCreate\"\n    | \"placement\"\n    | \"popperOptions\"\n  > {\n  className?: string;\n  style?: React.CSSProperties;\n\n  /**\n   * Don't use `children`, use `trigger` instead\n   */\n  children?: never;\n  /**\n   * Element that will be monitored to trigger the popover\n   */\n  trigger: React.ComponentProps<typeof AbstractTooltip>[\"children\"];\n  /**\n   * Events used to know when to trigger the popover\n   *\n   * @see https://atomiks.github.io/tippyjs/v6/all-props/#trigger\n   */\n  triggerEvents?: React.ComponentProps<typeof AbstractTooltip>[\"trigger\"];\n\n  /**\n   * Interactive mode turns off hiding when clicking on descendents.\n   * Useful for nested / toggle lists etc.\n   */\n  interactive?: boolean;\n}\n\n// NOTE: Defining modifiers with callback functions inline will cause a memory\n// leak Tippy-react retains every modifier with a callback in an internal array!\nconst findTippyBox: Modifier<\"findTippyBox\", any> = {\n  name: \"findTippyBox\",\n  phase: \"read\",\n  enabled: true,\n  fn({ name, state }) {\n    const element = state.elements.popper.querySelector<HTMLElement>(\n      \".tippy-box\",\n    );\n\n    state.modifiersData[name].boxElement = element;\n  },\n};\n\nconst applyMaxSize: Modifier<\"applyMaxSize\", any> = {\n  name: \"applyMaxSize\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"maxSize\", \"findTippyBox\"],\n  fn({ state }) {\n    const maxHeight = state.modifiersData.maxSize.height;\n\n    /**\n     * We read this element in the `findTippyBox` phase. We need to\n     * use some custom logic here to apply the style to the tippy\n     * box because usually that's not made available. We _could_\n     * apply these styles directly to the `popper` element and, but\n     * then the border will be swallowed by the overflow. If we put\n     * the border on `popper`, then the border will not be animated\n     * because animations are applied to `.tippy-box`.\n     */\n    const element: HTMLElement | null =\n      state.modifiersData.findTippyBox.boxElement;\n\n    if (element) {\n      element.style.maxHeight = `${maxHeight}px`;\n      element.style.overflow = \"auto\";\n    }\n  },\n};\n\nexport const Popover: React.FC<Props> = ({\n  fallbackPlacements,\n  content,\n  hideOnClick = true,\n  popperOptions,\n  trigger,\n  triggerEvents = \"mousedown\",\n  interactive,\n  ...props\n}) => {\n  const instanceRef = React.useRef<\n    Parameters<\n      NonNullable<React.ComponentProps<typeof AbstractTooltip>[\"onCreate\"]>\n    >[0]\n  >();\n\n  /**\n   * Callback to handle descendent `ListItem` clicks.\n   *\n   * When we have nested lists and toggle lists we might need to change how this\n   * behaves.\n   */\n  const handleClick = React.useCallback<React.MouseEventHandler>(\n    (element) => {\n      if (interactive || element.target === element.currentTarget) {\n        // We're listening for clicks on descendents so ignore events that come\n        // from the element with the listener.\n        return;\n      }\n\n      // how do we know if we want to hide the list?\n      instanceRef.current?.hide();\n    },\n    [interactive],\n  );\n\n  return (\n    <>\n      <TippyPopoverStyles />\n      <AbstractTooltip\n        appendTo=\"parent\"\n        offset={[0, 2]}\n        onCreate={(instance) => {\n          instanceRef.current = instance;\n        }}\n        content={<span onClick={handleClick}>{content}</span>}\n        hideOnClick={hideOnClick}\n        theme=\"space-kit-list\"\n        trigger={triggerEvents}\n        popperOptions={{\n          strategy: \"fixed\",\n          ...popperOptions,\n          modifiers: [\n            // Disable `flip` because we're using our new version\n            { name: \"flip\", enabled: false },\n            findTippyBox,\n            sizeModifier,\n            {\n              name: \"maxSize\",\n              requires: [\"findTippyBox\"],\n              options: { padding: 7, fallbackPlacements },\n            },\n            applyMaxSize,\n            // Modifiers later in the list override modifiers earlier in the\n            // list, so we have to place this at the end so user-defined\n            // modifiers can override space kit defined modifier configurations.\n            ...(popperOptions?.modifiers || []),\n          ],\n        }}\n        {...props}\n        interactive\n      >\n        {trigger}\n      </AbstractTooltip>\n    </>\n  );\n};\n"],"names":["findTippyBox","name","phase","enabled","fn","_a","state","element","elements","popper","querySelector","modifiersData","boxElement","applyMaxSize","requires","maxHeight","maxSize","height","style","overflow","Popover","fallbackPlacements","content","_b","hideOnClick","popperOptions","trigger","_c","triggerEvents","interactive","props","instanceRef","React","useRef","handleClick","useCallback","target","currentTarget","current","hide","TippyPopoverStyles","AbstractTooltip","appendTo","offset","onCreate","instance","onClick","theme","strategy","modifiers","sizeModifier","options","padding"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AACA,IAAMA,YAAY,GAAkC;EAClDC,IAAI,EAAE,cAD4C;EAElDC,KAAK,EAAE,MAF2C;EAGlDC,OAAO,EAAE,IAHyC;EAIlDC,EAAE,EAAF,UAAGC,EAAH;QAAKJ,IAAI;QAAEK,KAAK;QACRC,OAAO,GAAGD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsBC,aAAtB,CACd,YADc,CAAhB;IAIAJ,KAAK,CAACK,aAAN,CAAoBV,IAApB,EAA0BW,UAA1B,GAAuCL,OAAvC;;CATJ;AAaA,IAAMM,YAAY,GAAkC;EAClDZ,IAAI,EAAE,cAD4C;EAElDE,OAAO,EAAE,IAFyC;EAGlDD,KAAK,EAAE,aAH2C;EAIlDY,QAAQ,EAAE,CAAC,SAAD,EAAY,cAAZ,CAJwC;EAKlDV,EAAE,EAAF,UAAGC,EAAH;QAAKC,KAAK;QACFS,SAAS,GAAGT,KAAK,CAACK,aAAN,CAAoBK,OAApB,CAA4BC,MAA9C;;;;;;;;;;;QAWMV,OAAO,GACXD,KAAK,CAACK,aAAN,CAAoBX,YAApB,CAAiCY,UADnC;;QAGIL,OAAJ,EAAa;MACXA,OAAO,CAACW,KAAR,CAAcH,SAAd,GAA6BA,SAAS,OAAtC;MACAR,OAAO,CAACW,KAAR,CAAcC,QAAd,GAAyB,MAAzB;;;CAtBN;AA2BA,IAAaC,OAAO,GAAoB,UAACf,EAAD;MACtCgB,kBAAkB,wBAAlB;MACAC,OAAO,aADP;MAEAC,mBAFA;MAEAC,WAAW,mBAAG,SAFd;MAGAC,aAAa,mBAHb;MAIAC,OAAO,aAJP;MAKAC,qBALA;MAKAC,aAAa,mBAAG,gBALhB;MAMAC,WAAW,iBANX;MAOGC,KAAK,qBAR+B,qBAAA,WAAA,eAAA,iBAAA,WAAA,iBAAA,eAAA,EACvC;;MASMC,WAAW,GAAGC,cAAK,CAACC,MAAN,EAApB;;;;;;;;MAYMC,WAAW,GAAGF,cAAK,CAACG,WAAN,CAClB,UAAC5B,OAAD;;;QACMsB,WAAW,IAAItB,OAAO,CAAC6B,MAAR,KAAmB7B,OAAO,CAAC8B,aAA9C,EAA6D;;;;;;;UAO7DN,WAAW,CAACO,OAAZ,UAAA,iBAAA,SAAA,MAAqBC,MAArB;GATgB,EAWlB,CAACV,WAAD,CAXkB,CAApB;sBAeEG,4BAAA,wBAAA,MAAA,eACEA,4BAAA,CAACQ,qCAAD,MAAA,CADF,eAEER,4BAAA,CAACS,uBAAD;IACEC,QAAQ,EAAC;IACTC,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;IACRC,QAAQ,EAAE,UAACC,QAAD;MACRd,WAAW,CAACO,OAAZ,GAAsBO,QAAtB;;IAEFvB,OAAO,eAAEU,4BAAA,OAAA;MAAMc,OAAO,EAAEZ;KAAf,EAA6BZ,OAA7B;IACTE,WAAW,EAAEA;IACbuB,KAAK,EAAC;IACNrB,OAAO,EAAEE;IACTH,aAAa;MACXuB,QAAQ,EAAE;OACPvB;MACHwB,SAAS;;QAELhD,IAAI,EAAE,MAAR;QAAgBE,OAAO,EAAE;SACzBH,cACAkD,2BACA;QACEjD,IAAI,EAAE,SADR;QAEEa,QAAQ,EAAE,CAAC,cAAD,CAFZ;QAGEqC,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAX;UAAc/B,kBAAkB;;SAE3CR,eAII,CAAAY,aAAa,SAAb,IAAAA,aAAa,WAAb,SAAA,GAAAA,aAAa,CAAEwB,SAAf,KAA4B;;KAGhCnB;IACJD,WAAW;IA/Bb,EAiCGH,OAjCH,CAFF,CADF;CApCK;;;;"}