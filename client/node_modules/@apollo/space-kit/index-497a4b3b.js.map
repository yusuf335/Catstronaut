{"version":3,"file":"index-497a4b3b.js","sources":["src/ListConfig/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { ShadedColor, colors } from \"../colors\";\n\n/**\n * Enumeration of all icon sizes\n *\n * This uses string literals instead of a TypeScript union so we can use\n * strings, like `\"small\"`, for props instead of `IconSize.small`\n */\ntype IconSize = \"small\" | \"normal\" | \"large\";\n\ninterface ListConfig {\n  /**\n   * Override the the default element used to render `endIcon`\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged.\n   *\n   * @default <div />\n   */\n  endIconAs: React.ReactElement;\n\n  /**\n   * Background color of the hovered item in a menu\n   *\n   * The text color will be determined automatically. `null` indicates we don't\n   * want to show any different styling on hover.\n   */\n  hoverColor: ShadedColor | null;\n\n  /**\n   * Icon size to use for all descendents\n   */\n  iconSize: IconSize;\n\n  /**\n   * The margin to place around list items between the edge of the `List` and\n   * other `ListItem`s. Using \"none\" will indicate that there is no margin for\n   * an edge-to-edge feel.\n   *\n   * @default \"auto\"\n   */\n  margin: \"auto\" | \"none\";\n\n  /**\n   * Padding level on menu items\n   */\n  padding: \"normal\" | \"relaxed\";\n\n  /**\n   * Background color of the selected item in a menu\n   *\n   * The text color will be determined automatically\n   */\n  selectedColor: ShadedColor;\n\n  /**\n   * Override the the default element used to render `startIcon`\n   *\n   * All props provided will be merged with props that this component adds,\n   * including `className`s being merged.\n   *\n   * @default <div />\n   */\n  startIconAs: React.ReactElement;\n\n  /**\n   * Indicates if text should be truncated when it will overflow the boundary.\n   * `true` incidates use an ellipsis and `false` indicates to allow line\n   * breaks.\n   *\n   * @default true\n   */\n  truncate: boolean;\n}\n\n/**\n * Default values for each property\n */\nexport const defaults: ListConfig = {\n  endIconAs: <div />,\n  hoverColor: colors.silver.light,\n  iconSize: \"normal\",\n  margin: \"auto\",\n  padding: \"normal\",\n  selectedColor: colors.blue.base,\n  startIconAs: <div />,\n  truncate: true,\n};\n\n/**\n * Context holding all configuration options for lists\n */\nconst ListConfigContext = React.createContext<Partial<ListConfig> | undefined>(\n  undefined,\n);\n\n/**\n * Provider to set list config on the context\n */\nexport const ListConfigProvider: React.FC<Partial<ListConfig>> = ({\n  children,\n  ...props\n}) => {\n  return (\n    <ListConfigContext.Provider value={props}>\n      {children}\n    </ListConfigContext.Provider>\n  );\n};\n\nexport function useListConfig(): ListConfig {\n  return {\n    ...defaults,\n    ...(React.useContext(ListConfigContext) || {}),\n  };\n}\n"],"names":["defaults","endIconAs","React","hoverColor","colors","silver","light","iconSize","margin","padding","selectedColor","blue","base","startIconAs","truncate","ListConfigContext","createContext","undefined","ListConfigProvider","_a","children","props","Provider","value","useListConfig","useContext"],"mappings":";;;;;;;;;AA4EA;;;;AAGA,AAAO,IAAMA,QAAQ,GAAe;EAClCC,SAAS,eAAEC,4BAAA,MAAA,MAAA,CADuB;EAElCC,UAAU,EAAEC,aAAM,CAACC,MAAP,CAAcC,KAFQ;EAGlCC,QAAQ,EAAE,QAHwB;EAIlCC,MAAM,EAAE,MAJ0B;EAKlCC,OAAO,EAAE,QALyB;EAMlCC,aAAa,EAAEN,aAAM,CAACO,IAAP,CAAYC,IANO;EAOlCC,WAAW,eAAEX,4BAAA,MAAA,MAAA,CAPqB;EAQlCY,QAAQ,EAAE;CARL;;;;;AAcP,IAAMC,iBAAiB,gBAAGb,cAAK,CAACc,aAAN,CACxBC,SADwB,CAA1B;;;;;AAOA,IAAaC,kBAAkB,GAAkC,UAACC,EAAD;MAC/DC,QAAQ,cAAR;MACGC,KAAK,qBAFwD,WAAA,EAChE;;sBAIEnB,4BAAA,CAACa,iBAAiB,CAACO,QAAnB;IAA4BC,KAAK,EAAEF;GAAnC,EACGD,QADH,CADF;CAJK;AAWP,SAAgBI;6CAETxB,WACCE,cAAK,CAACuB,UAAN,CAAiBV,iBAAjB,KAAuC,GAF7C;;;;;;"}