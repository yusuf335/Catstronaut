import * as React from "react";
/**
 * These items are expected to be passed to the context provider
 */
interface FeatureIntroControlContextConfig {
    id?: string;
}
/**
 * Required: dismiss, heading, content
 */
interface FeatureIntroControl extends FeatureIntroControlContextConfig {
    heading: React.ReactNode;
    setHeading: React.Dispatch<React.SetStateAction<FeatureIntroControl["heading"]>> | undefined;
    content: React.ReactNode;
    setContent: React.Dispatch<React.SetStateAction<FeatureIntroControl["content"]>> | undefined;
    image: React.ReactNode;
    setImage: React.Dispatch<React.SetStateAction<FeatureIntroControl["image"]>> | undefined;
    learnMoreLink: React.ReactNode;
    setLearnMoreLink: React.Dispatch<React.SetStateAction<FeatureIntroControl["image"]>> | undefined;
    dismissButton: React.ReactNode;
    setDismissButton: React.Dispatch<React.SetStateAction<FeatureIntroControl["image"]>> | undefined;
}
export declare const FeatureIntroControlContextProvider: React.FC<FeatureIntroControlContextConfig>;
/**
 * Internal hook to access Feature Intro control context
 */
export declare function useFeatureIntroControlInternalContext(): FeatureIntroControl | undefined;
export {};
