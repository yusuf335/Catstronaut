{"version":3,"file":"AlertBanner.js","sources":["../src/AlertBanner/AlertBanner.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React, { CSSProperties, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { base } from \"../typography\";\nimport { colors } from \"../colors\";\nimport { assertUnreachable } from \"../shared/assertUnreachable\";\nimport { IconInfoSolid } from \"../icons/IconInfoSolid\";\nimport { IconWarningSolid } from \"../icons/IconWarningSolid\";\nimport { IconErrorSolid } from \"../icons/IconErrorSolid\";\nimport { IconSuccessSolid } from \"../icons/IconSuccessSolid\";\nimport { useSpaceKitProvider } from \"../SpaceKitProvider\";\n\ninterface AlertBannerProps {\n  /**\n   * color theme for alert\n   * @default \"light\"\n   */\n  theme?: \"light\" | \"dark\";\n\n  /**\n   * The content of the banner, appears to right of icon\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Override container around `{children}`. You can pass either an intrinisic\n   * jsx element as a string (like \"p\") or a React element (`<p />`)\n   *\n   * If you pass a React element, props that we add are spread onto the input.\n   *\n   * @default \"div\"\n   */\n  childrenContainerAs?: React.ReactElement | keyof JSX.IntrinsicElements;\n\n  className?: string;\n  style?: CSSProperties;\n\n  /**\n   * Type of alert, this is used to determine the color and icon in the banner\n   */\n  type: \"info\" | \"warn\" | \"error\" | \"success\";\n}\n\nexport const AlertBanner: React.FC<AlertBannerProps> = ({\n  children,\n  childrenContainerAs = \"div\",\n  theme: propTheme,\n  type,\n  ...otherProps\n}) => {\n  const { theme: providerTheme } = useSpaceKitProvider();\n  const theme = propTheme || providerTheme;\n\n  const { Icon, color } = useMemo(() => {\n    switch (type) {\n      case \"info\":\n        return { color: colors.blue, Icon: IconInfoSolid };\n      case \"warn\":\n        return { color: colors.orange, Icon: IconWarningSolid };\n      case \"error\":\n        return { color: colors.red, Icon: IconErrorSolid };\n      case \"success\":\n        return { color: colors.green, Icon: IconSuccessSolid };\n      default:\n        assertUnreachable(type);\n    }\n  }, [type]);\n  return (\n    <section\n      {...otherProps}\n      css={{\n        ...(theme === \"light\"\n          ? {\n              backgroundColor: color.lightest,\n              color: color.darker,\n              borderWidth: 1,\n              borderColor: type === \"info\" ? color.lighter : color.light,\n            }\n          : theme === \"dark\"\n          ? {\n              backgroundColor: color.darkest,\n              color: color.lightest,\n              borderWidth: 0,\n              borderColor: colors.silver.dark,\n            }\n          : assertUnreachable(theme)),\n        borderStyle: \"solid\",\n        borderRadius: 4,\n        padding: \"12px 15px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        ...base.small,\n      }}\n    >\n      <Icon\n        css={{\n          width: 20,\n          height: 20,\n          color: color.base,\n          marginRight: 13,\n          \"& .inner\": theme === \"dark\" &&\n            type !== \"warn\" && { fill: colors.white },\n        }}\n      />\n      {React.isValidElement(childrenContainerAs)\n        ? React.cloneElement(childrenContainerAs, {}, children)\n        : React.createElement(childrenContainerAs, {}, children)}\n    </section>\n  );\n};\n\nAlertBanner.propTypes = {\n  children: PropTypes.node,\n  childrenContainerAs: PropTypes.oneOfType([\n    PropTypes.element.isRequired,\n    PropTypes.string.isRequired as any, // Using PropTypes.string to match keyof JSX.IntrinsicElements\n  ]),\n  type: PropTypes.oneOf([\"info\", \"warn\", \"error\", \"success\"] as const)\n    .isRequired,\n};\n"],"names":["AlertBanner","_a","children","_b","childrenContainerAs","propTheme","type","otherProps","providerTheme","useSpaceKitProvider","theme","_c","useMemo","color","colors","blue","Icon","IconInfoSolid","orange","IconWarningSolid","red","IconErrorSolid","green","IconSuccessSolid","assertUnreachable","jsx","css","backgroundColor","lightest","darker","borderWidth","borderColor","lighter","light","darkest","silver","dark","borderStyle","borderRadius","padding","display","alignItems","base","width","height","marginRight","fill","white","React","isValidElement","cloneElement","createElement","propTypes","PropTypes","node","oneOfType","element","isRequired","string","oneOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;IA6CaA,WAAW,GAA+B,UAACC,EAAD;MACrDC,QAAQ,cAAR;MACAC,2BADA;MACAC,mBAAmB,mBAAG,UADtB;MAEOC,SAAS,WAFhB;MAGAC,IAAI,UAHJ;MAIGC,UAAU,qBALyC,WAAA,uBAAA,SAAA,QAAA,EACtD;;MAMeC,aAAa,GAAKC,yBAAmB,QAA5C;MACFC,KAAK,GAAGL,SAAS,IAAIG,aAA3B;;MAEMG,KAAkBC,aAAO,CAAC;YACtBN,IAAR;WACO,MAAL;eACS;UAAEO,KAAK,EAAEC,aAAM,CAACC,IAAhB;UAAsBC,IAAI,EAAEC;SAAnC;;WACG,MAAL;eACS;UAAEJ,KAAK,EAAEC,aAAM,CAACI,MAAhB;UAAwBF,IAAI,EAAEG;SAArC;;WACG,OAAL;eACS;UAAEN,KAAK,EAAEC,aAAM,CAACM,GAAhB;UAAqBJ,IAAI,EAAEK;SAAlC;;WACG,SAAL;eACS;UAAER,KAAK,EAAEC,aAAM,CAACQ,KAAhB;UAAuBN,IAAI,EAAEO;SAApC;;;QAEAC,mCAAiB,CAAClB,IAAD,CAAjB;;GAXyB,EAa5B,CAACA,IAAD,CAb4B,CAAzB;MAAEU,IAAI,UAAN;MAAQH,KAAK,WAAb;;SAeJY,wCACMlB;IACJmB,GAAG,sDACGhB,KAAK,KAAK,OAAV,GACA;MACEiB,eAAe,EAAEd,KAAK,CAACe,QADzB;MAEEf,KAAK,EAAEA,KAAK,CAACgB,MAFf;MAGEC,WAAW,EAAE,CAHf;MAIEC,WAAW,EAAEzB,IAAI,KAAK,MAAT,GAAkBO,KAAK,CAACmB,OAAxB,GAAkCnB,KAAK,CAACoB;KALvD,GAOAvB,KAAK,KAAK,MAAV,GACA;MACEiB,eAAe,EAAEd,KAAK,CAACqB,OADzB;MAEErB,KAAK,EAAEA,KAAK,CAACe,QAFf;MAGEE,WAAW,EAAE,CAHf;MAIEC,WAAW,EAAEjB,aAAM,CAACqB,MAAP,CAAcC;KAL7B,GAOAZ,mCAAiB,CAACd,KAAD;MACrB2B,WAAW,EAAE;MACbC,YAAY,EAAE;MACdC,OAAO,EAAE;MACTC,OAAO,EAAE;MACTC,UAAU,EAAE;QACTC;MAGLjB,SAACT;IACCU,GAAG,EAAE;MACHiB,KAAK,EAAE,EADJ;MAEHC,MAAM,EAAE,EAFL;MAGH/B,KAAK,EAAEA,KAAK,CAAC6B,IAHV;MAIHG,WAAW,EAAE,EAJV;kBAKSnC,KAAK,KAAK,MAAV,IACVJ,IAAI,KAAK,MADC,IACS;QAAEwC,IAAI,EAAEhC,aAAM,CAACiC;;;mBAGvCC,cAAK,CAACC,cAAN,CAAqB7C,mBAArB,iBACG4C,cAAK,CAACE,YAAN,CAAmB9C,mBAAnB,EAAwC,EAAxC,EAA4CF,QAA5C,CADH,gBAEG8C,cAAK,CAACG,aAAN,CAAoB/C,mBAApB,EAAyC,EAAzC,EAA6CF,QAA7C,EAvCR;CAxBK;AAoEPF,WAAW,CAACoD,SAAZ,GAAwB;EACtBlD,QAAQ,EAAEmD,SAAS,CAACC,IADE;EAEtBlD,mBAAmB,EAAEiD,SAAS,CAACE,SAAV,CAAoB,CACvCF,SAAS,CAACG,OAAV,CAAkBC,UADqB,EAEvCJ,SAAS,CAACK,MAAV,CAAiBD,UAFsB,CAApB,CAFC;EAMtBnD,IAAI,EAAE+C,SAAS,CAACM,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,SAA1B,CAAhB,EACHF;CAPL;;;;"}